Program([
	FuncDecl(Id(buyCar), IntegerType, [Param(Id(nums), ArrayType([200], IntegerType)), Param(Id(length), IntegerType), Param(Id(k), IntegerType)], None, BlockStmt([CallStmt(Id(sort), Id(nums), BinExpr(+, Id(nums), Id(length))), VarDecl(Id(result), IntegerType, IntegerLit(0)), VarDecl(Id(i), IntegerType, IntegerLit(0)), WhileStmt(BinExpr(&&, BinExpr(>, Id(k), IntegerLit(0)), BinExpr(>=, BinExpr(-, Id(k), ArrayCell(Id(nums), [Id(i)])), IntegerLit(0))), BlockStmt([AssignStmt(Id(result), BinExpr(+, Id(result), IntegerLit(1))), AssignStmt(Id(k), BinExpr(-, Id(k), ArrayCell(Id(nums), [Id(i)]))), AssignStmt(Id(i), BinExpr(+, Id(i), IntegerLit(1)))])), ReturnStmt(Id(result))]))
	FuncDecl(Id(main), VoidType, [], None, BlockStmt([VarDecl(Id(nums), ArrayType([5], IntegerType), ArrayLit([IntegerLit(90), IntegerLit(30), IntegerLit(40), IntegerLit(90), IntegerLit(20)])), VarDecl(Id(length), IntegerType, BinExpr(/, FuncCall(Id(sizeof), [Id(nums)]), FuncCall(Id(sizeof), [ArrayCell(Id(nums), [IntegerLit(0)])]))), CallStmt(Id(printeger), FuncCall(Id(buyCar), [Id(nums), Id(length), IntegerLit(90)]))]))
])