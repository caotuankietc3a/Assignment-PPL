Program([
	FuncDecl(countWaysUtil, IntegerType, [Param(x, IntegerType), Param(n, IntegerType), Param(num, IntegerType)], None, BlockStmt([VarDecl(val, IntegerType, BinExpr(-, Id(x), FuncCall(pow, [Id(num), Id(n)]))), IfStmt(BinExpr(==, Id(val), IntegerLit(0)), ReturnStmt(IntegerLit(1))), IfStmt(BinExpr(<, Id(val), IntegerLit(0)), ReturnStmt(IntegerLit(0))), ReturnStmt(BinExpr(+, FuncCall(countWaysUtil, [Id(val), Id(n), BinExpr(+, Id(num), IntegerLit(1))]), FuncCall(countWaysUtil, [Id(x), Id(n), BinExpr(+, Id(num), IntegerLit(1))])))]))
	FuncDecl(countWaySumOfSquare, IntegerType, [Param(x, IntegerType)], None, BlockStmt([ReturnStmt(FuncCall(countWaysUtil, [Id(x), IntegerLit(2), IntegerLit(1)]))]))
	FuncDecl(main, VoidType, [], None, BlockStmt([CallStmt(printeger, FuncCall(countWaySumOfSquare, [IntegerLit(100)]))]))
])