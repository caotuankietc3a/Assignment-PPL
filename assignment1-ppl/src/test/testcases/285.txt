
left: function int (i: int) { return (2 * i + 1); }
right: function int (i: int) { return (2 * i + 2); }
parent: function int (i: int) { return (i - 1) / 2; }
swap: function void(x: int,y: int) {
  k: int = x;
  x = y;
  y = k;
}
reheapUp: function void(maxHeap: array[100] of int, numberOfElements: int , index: int ) {
  if (index < numberOfElements) {
    if (index && maxHeap[parent(index)] < maxHeap[index]) {
      swap(maxHeap[index], maxHeap[parent(index)]);
      reheapUp(maxHeap, numberOfElements, parent(index));
    }
  }

}
